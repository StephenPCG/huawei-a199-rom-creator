# $__root_dir should be set before source this file

if [ -z "$__root_dir" ]; then
    echo "\$__root_dir not set before sourcing this file"
    exit 1
fi

# get abs_path of __root_dir
pushd $__root_dir >/dev/null
__root_dir=$(pwd)
popd >/dev/null
__script_dir=$__root_dir/bin

__work_dir=$__root_dir/work
#__rom_dir=$__root_dir/rom
__output_dir=$__root_dir/output
__cm_dir=$__root_dir/cm/

if [ -r "$__root_dir/romversion" ]; then
    __rom_ver="$(cat $__root_dir/romversion 2>/dev/null)"
fi
__rom_ver=${__rom_ver:-$(date +%Y%m%d_%H%M%S)}
__rom_dir=$__root_dir/rom/$__rom_ver

if [ -e "$__root_dir/.testing" ]; then
    __is_testing=true
fi

prepared() {
    if grep -q $__work_dir /proc/mounts; then
        return 0
    else
        return 1
    fi
}

install_apk() {
    apk_file=$1
    system_dir=$2

    if [ ! -f "$apk_file" ]; then echo "$apk_file does not exist."; return; fi
    if [ ! -d "$system_dir" ]; then echo "$system_dir does not exist."; return; fi

    sudo cp -fv $apk_file $system_dir/app/
    sudo chown -v 0.0 $system_dir/app/$(basename $apk_file)
    for so_file in `unzip -t $apk_file | grep -Eo ' lib/.+\.so'`; do
        echo "installing $so_file ..."
        # sudo unzip $apk_file $so_file -d $system_dir
    done
}

remove_apk() {
    apk_file=$1
    if [ ! -f "$apk_file" ]; then echo "$apk_file does not exist."; return; fi
    system_dir=$(dirname $(dirname $apk_file))

    for so_file in `unzip -t $apk_file | grep -Eo ' lib/.+\.so'`; do
        so_file=$system_dir/$so_file
        if [ -e $so_file ]; then
            echo "removing $so_file from $apk_file ..."
            sudo rm -f $so_file
        fi
    done
    echo "removing $apk_file ..."
    sudo rm -f $apk_file
}

yes_or_no() {
    promtp=$1
    default=$2
    case $default in
        y|yes) p="(Y/n)" ;;
        n|no)  p="(y/N)" ;;
        *)     p="(y/n)" ;;
    esac
    yn=
    while [ -z "$yn" ]; do
        read -p "$promtp $p" yn
        if [ -z "$yn" -a -n "$default" ]; then yn=$default; fi
        if [ "$yn" == y ]; then return 0; fi
        if [ "$yn" == yes ]; then return 0; fi
        if [ "$yn" == n ]; then return 1; fi
        if [ "$yn" == no ]; then return 1; fi
        yn=
    done
}

prop_get() {
    prop_file=$1
    key=$2
    awk -F= "/^$key=/{print \$2}" $prop_file
}

prop_set() {
    prop_file=$1
    key=$2
    value=$3
    if grep -qE "^$key=" $prop_file; then
        sudo sed -i "s/^$key=.\+/$key=$value/" $prop_file
    else
        echo "$key=$value" | sudo tee -a $prop_file
    fi
}

# these two functions can only be used to get/set cust/chinatelecom/cn/xml/hw_defaults.xml
defaults_xml_get() {
    xml=$1
    key=$2
    grep -oE "$key\s*=\s*[^/]+" $xml | awk -F= '{print $2}' | tr '"' ' '
}

defaults_xml_set() {
    xml=$1
    typ=$2
    key=$3
    val=$4
    if grep -qE "$key\s*=\s*[^/]+" $xml; then
        sudo sed -i "s#^.\+$key\s*=\s*[^/]\+#    <$typ $key = \"$val\"#" $xml
    else
        sudo sed -i "s#<\/resources>#    <$typ $key = \"$val\" />\n<\/resources>#" $xml
    fi
}

# vim:ai:et:sts=4:sw=4:ft=sh
